name: Deploy
 
on:
  push:
    tags:
      - 'cr'
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Create JSON credentials file
      id: create-json-credentials
      uses: jsdaniell/create-json@v1.2.3
      with:
        name: "gcloud-service-key.json"
        json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        version: 'latest'
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

    - name: Authenticate to Google Cloud
      run: gcloud auth activate-service-account --key-file=gcloud-service-key.json

    - name: Enable APIs
      run: |
        gcloud services enable artifactregistry.googleapis.com
        gcloud services enable cloudbuild.googleapis.com
        gcloud services enable cloudresourcemanager.googleapis.com
        gcloud services enable cloudfunctions.googleapis.com
        gcloud services enable iam.googleapis.com
        gcloud services enable pubsub.googleapis.com
        gcloud services enable storage.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud services enable bigquery.googleapis.com
        gcloud services enable bigquerydatatransfer.googleapis.com
        gcloud services enable bigqueryconnection.googleapis.com
        gcloud services enable servicemanagement.googleapis.com
        gcloud services enable serviceusage.googleapis.com
        gcloud services enable logging.googleapis.com
        gcloud services enable monitoring.googleapis.com
        gcloud services enable cloudtrace.googleapis.com
        gcloud services enable stackdriver.googleapis.com
        gcloud services enable eventarc.googleapis.com
  


    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        working-directory: create_resources

    - name: Initialize Terraform
      run: terraform init
      working-directory: create_resources

    - name: Validate Terraform
      run: terraform validate
      working-directory: create_resources

    - name: Plan Terraform
      run: terraform plan -out=tfplan -parallelism=10
      working-directory: create_resources
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcloud-service-key.json
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        TF_VAR_region: "us-central1"
        TF_VAR_service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}

    - name: Apply Terraform
      run: terraform apply -auto-approve tfplan
      working-directory: create_resources
      env:
        GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcloud-service-key.json
        TF_VAR_project_id: ${{ secrets.GCP_PROJECT_ID }}
        TF_VAR_region: "us-central1"
        TF_VAR_service_account_email: ${{ secrets.GCP_SERVICE_ACCOUNT_EMAIL }}
